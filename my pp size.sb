''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'                                                                                                      '
'                                                                                                      '
'                                                                                                      '
'                                                                                                      '
'                                                                                                      '
'                                                                                                      '
'Attention who ever is reading this shit. This programme is to be run with robot that has FULL Battery '
'                                                                                                      '
'                                                                                                      '
'                                                                                                      '
'                                                                                                      '
'                                                                                                      '
'                                                                                                      '
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Motor.Invert("A")
Motor.Invert("B")

TotalRGBTH[0] = 518 'TH Value of Sensor 2
TotalRGBTH[1] = 545 'TH Value of Sensor 3
lineSquare_TH[0] = 518
lineSquare_TH[1] = 545 
TotalRGBGGTH[1] = 306
lightVal[0] = 0
lightVal[1] = 0

Last_Error[0] = 0
Error[0] = 0

Last_Error[1] = 0
Error[1] = 0

TP[0] = 80 '100

Kp[0] = 0.07 '0.08
Ki[0] = 0.0007 '0.0008
Kd[0] = 0.7 '0.8

Intergal[0] = 0

'colours of car in carpark
'Blue = 2, Green = 3, Yellow = 4, Red = 5
carpark[0] = 0
carpark[1] = 0
carpark[2] = 0
carpark[3] = 0
carpark[4] = 0
carpark[5] = 0
carpark[6] = 0
carpark[7] = 0
carpark[8] = 0
carpark[9] = 0
carpark[10] = 0
carpark[11] = 0

'Fixed colours of all carparks
'Blue = 2, Green = 3, Yellow = 4, Red = 5
parkState[0] = 2
parkState[1] = 2
parkState[2] = 5
parkState[3] = 3
parkState[4] = 3
parkState[5] = 5
parkState[6] = 3
parkState[7] = 2
parkState[8] = 5
parkState[9] = 5
parkState[10] = 3
parkState[11] = 2

'colours of waiting cars
waitingCar[0] = 0
waitingCar[1] = 0
waitingCar[2] = 0
waitingCar[3] = 0
waitingCar[4] = 0
waitingCar[5] = 0

Sensor.SetMode(1, 2)
Sensor.SetMode(2, 4)
Sensor.SetMode(3, 4)
Sensor.SetMode(4, 2)

motorEncoder = 0
motorEncoder_Speed = 0
motorEncoder_Degree = 0
counter = 0
turncounter = 0
fullLevel =  0
B_Degree = 0
C_Degree = 0
lineSquare_Counter = 0

'#########################################################
resetKicker()
Motor.ResetCount("BC")
motorEncoder_Degree = 120
motorEncoder_Speed = 25
motorEncoder()
Motor.Stop("BC","True")
Program.Delay(200)
Motor.MoveSync("BC",40,0,350,"True")
readVal()
While lightVal[0] <= 110
  readVal()
  Motor.StartSync("BC",25,-25)
EndWhile

collectRedCar()

' While counter < 3 '3
'   readVal()
'   PD()
'   If lightVal[1] <= 120 Then
'     checkWhite()
'   EndIf
' EndWhile
' reset() 'Do not fucking remove
' TP[0] = 50
' resetKicker()
' collectionRight()
' reset()
' OpenKicker()
' TP[0] = 70
' counter = 0
' While counter < 2
'   readVal()
'   PD()
'   If lightVal[1] <= 120 Then
'     checkWhite()
'   EndIf
' EndWhile
' reset() 'Do not fucking remove

' TP[0] = 60
' counter = 0
' While counter < 2
'   readVal()
'   PD()
'   If lightVal[1] <= 120 Then
'     checkWhite()
'   EndIf
' EndWhile
' reset()
' returnLeft()
' Motor.Stop("BC","True")
' resetKicker()
' Motor.MoveSync("BC",0,40,180,"True")
' Motor.Stop("BC","True")
' readVal()
' While lightVal[0] >= 120
'   readVal()
'   Motor.StartSync("BC",0,40)
' EndWhile
' reset()
' readVal()
' While lightVal[0] <= 120
'   readVal()
'   Motor.StartSync("BC",0,40)
' EndWhile
' reset()





' depositing()
' reset()
' Motor.MoveSync("BC",0,25,200,"True")
' readVal()
' While lightVal[1] >= 100
'   readVal()
'   Motor.StartSync("BC",0,25)
' EndWhile
' reset()
' Motor.MoveSync("BC",0,25,40,"True")
' reset()
' Motor.ResetCount("BC")
' motorEncoder_Degree = 260
' motorEncoder_Speed = 25
' motorEncoder()
' Motor.Stop("BC","True")
' reset()
' TP[0] = 40
' Motor.ResetCount("BC")
' While B_Degree <= 300
'   readVal()
'   PDtwo()
'   B_Degree = Motor.GetCount("B")
' EndWhile
' reset()
' slowClosure()
' Motor.ResetCount("BC")
' motorEncoder_Degree = 80
' motorEncoder_Speed = -25
' motorEncoder()
' Motor.Stop("BC","True")
' reset()
' OpenKicker()
' Motor.ResetCount("BC")
' motorEncoder_Degree = 60
' motorEncoder_Speed = 10
' motorEncoder()
' Motor.Stop("BC","True")
' resetKicker()
' reset()

' readVal()
' While lightVal[1] >= 120 
'   readVal()
'   Motor.StartSync("BC",-25,-25)
' EndWhile
' reset()

' Motor.ResetCount("BC")
' motorEncoder_Degree = 40
' motorEncoder_Speed = -25
' motorEncoder()
' Motor.Stop("BC","True")
' reset()

' lineSquare()

' collectingCarsFirstSet()

' depositingCarsFirstSet()

' collectingSecondSet()

' depositingCarsSecondset()
' #########################################################
Sub OpenKicker
  Motor.Start("AD",100)
  Program.Delay(120)
  Motor.Stop("AD","True") 
EndSub

Sub fullOpen
  Motor.Start("AD",100)
  Program.Delay(240)
  Motor.Stop("AD","True") 
EndSub

Sub slowClosure
  Motor.Start("AD",-40)
  Program.Delay(800)
  Motor.Stop("AD","True") 
EndSub

Sub resetKicker
  Motor.Start("AD",-100)
  Program.Delay(400)
  Motor.Stop("AD","True") 
EndSub

Sub readVal
  rawValue = Sensor.ReadRaw(2,3)
  rawValuei = Sensor.ReadRaw(3,3)
  lightVal[0] = rawValue[0] + rawValue[1] + rawValue[2]
  lightVal[1] = rawValuei[0] + rawValuei[1] + rawValuei[2]
EndSub

Sub PD
  Error[0] = lightVal[0] - TotalRGBTH[0]
  Intergal[0] = Error[0] + Intergal[0]*0.5
  Correction = (Error[0] * Kp[0]) + (Error[0] - Last_Error[0])*Kd[0] + Intergal[0]*Ki[0]
  Motor.StartSync("BC",Math.Max(Math.Min((TP[0] + Correction),100),-100),Math.Max(Math.Min((TP[0] - Correction),100),-100))
  Last_Error = Error
EndSub

Sub PDtwo
  Error[0] = lightVal[0] - TotalRGBTH[0]
  Intergal[0] = Error[0] + Intergal[0]*0.5
  Correction = (Error[0] * Kp[0]) + (Error[0] - Last_Error[0])*Kd[0] + Intergal[0]*Ki[0]
  Motor.StartSync("BC",Math.Max(Math.Min((TP[0] - Correction),100),-100),Math.Max(Math.Min((TP[0] + Correction),100),-100))
  Last_Error = Error
EndSub

Sub PDright
  Error[1] = lightVal[1] - TotalRGBTH[1]
  Intergal[1] = Error[1] + Intergal[1]*0.5
  Correction = (Error[1] * Kp[0]) + (Error[1] - Last_Error[1])*Kd[0] + Intergal[0]*Ki[0]
  Motor.StartSync("BC",Math.Max(Math.Min((TP[0] - Correction),100),-100),Math.Max(Math.Min((TP[0] + Correction),100),-100))
  Last_Error = Error
EndSub


Sub checkWhite
  Speaker.Note(100,"B7",20)
  Program.Delay(10)
  Motor.ResetCount("BC")
  Motor.MoveSync("BC",100,100,20,"True")
  Program.Delay(10)
  counter = counter + 1
EndSub

Sub collection
  Program.Delay(200)
  If fullLevel = 0 Then
    collectionRight()
  Else
    collectionLeft()
  EndIf 
  If fullLevel <> 2 Then
    fullLevel = 0
  EndIf
EndSub

Sub collectionLeft
  'checkColor()
  Motor.Move("A", 50, 120, "True")
  TP[0] = 60
  Motor.ResetCount("BC")
  While B_Degree <= 150
    readVal()
    PD()
    B_Degree = Motor.GetCount("B")
  EndWhile
  reset()
  Motor.Stop("BC","True")
  Motor.MoveSync("BC",0,-25,380,"True")
  Motor.Stop("BC","True")
  Motor.ResetCount("BC")
  motorEncoder_Degree = 150
  motorEncoder_Speed = 25
  motorEncoder()
  Motor.Stop("BC","True")
  Motor.Start("A", -25)
  Program.Delay(300)
  Motor.Stop("A", "True")
  Motor.Move("A", 50, 120, "True")
  Motor.ResetCount("BC")
  motorEncoder_Degree = 80
  motorEncoder_Speed = 20 
  motorEncoder()
  Motor.Stop("BC","True")
  Motor.Start("A", -30)
  Program.Delay(300)
  Motor.Stop("A", "True")
  Motor.ResetCount("BC")
  motorEncoder_Degree = 10
  motorEncoder_Speed = 20
  motorEncoder()
  Motor.Stop("BC","True")
  Motor.ResetCount("BC")
  motorEncoder_Degree = 180
  motorEncoder_Speed = -25
  motorEncoder()
  Motor.Stop("BC","True")
  Motor.MoveSync("BC",-25,25,160,"True")
  Motor.Stop("BC","True")
  readVal()
  While lightVal[0] >= 120
    readVal()
    Motor.StartSync("BC",-25,25)
  EndWhile
  reset()
  readVal()
  While lightVal[0] <= 120
    readVal()
    Motor.StartSync("BC",-25,25)
  EndWhile
  fullLevel = fullLevel + 1
EndSub

Sub collectionRight
  'checkColor()
  Motor.Move("D", 50, 120, "True")
  Program.Delay(200)
  TP[0] = 60
  Motor.ResetCount("BC")
  While B_Degree <= 240
    readVal()
    PD()
    B_Degree = Motor.GetCount("B")
  EndWhile
  reset()
  TP[0] = 100
  Motor.MoveSync("BC",0,-25,390,"True")
  Motor.Stop("BC","True")
  Program.Delay(100)
  Motor.ResetCount("BC")
  motorEncoder_Degree = 120
  motorEncoder_Speed = 25
  motorEncoder()
  Motor.Stop("BC","True")
  resetKicker()
  OpenKicker()
  Motor.ResetCount("BC")
  motorEncoder_Degree = 100
  motorEncoder_Speed = 25
  motorEncoder()
  Motor.Stop("BC","True")
  resetKicker()
  Motor.ResetCount("BC")
  motorEncoder_Degree = 160
  motorEncoder_Speed = -20
  motorEncoder()
  reset()
  readVal()
  While lightVal[0] >= 120
    readVal()
    Motor.StartSync("BC",-25,25)
  EndWhile
  reset()
EndSub

Sub returnLeft
  Motor.ResetCount("BC")
  motorEncoder_Degree = 100
  motorEncoder_Speed = 25
  motorEncoder()
  Motor.Stop("BC","True")
  Motor.MoveSync("BC",40,-40,200,"True")
  Motor.Move("A", 50, 120, "True")
  Motor.ResetCount("BC")
  motorEncoder_Degree = 80
  motorEncoder_Speed = 25
  motorEncoder()
  Motor.Stop("BC","True")
  Program.Delay(80)
  Motor.ResetCount("BC")
  motorEncoder_Degree = 220
  motorEncoder_Speed = -25
  motorEncoder()
  Motor.Stop("BC","True")
  resetKicker()
EndSub

Sub returnLeftLeft
  Motor.ResetCount("BC")
  motorEncoder_Degree = 80
  motorEncoder_Speed = 25
  motorEncoder()
  Motor.Stop("BC","True")
  Motor.MoveSync("BC",-40,40,200,"True")
  Motor.Move("A", 50, 120, "True")
  Motor.ResetCount("BC")
  motorEncoder_Degree = 80
  motorEncoder_Speed = 25
  motorEncoder()
  Motor.Stop("BC","True")
  Program.Delay(80)
  Motor.ResetCount("BC")
  motorEncoder_Degree = 220
  motorEncoder_Speed = -25
  motorEncoder()
  Motor.Stop("BC","True")
  resetKicker()
EndSub

Sub returnRight
  Motor.ResetCount("BC")
  motorEncoder_Degree = 120
  motorEncoder_Speed = 25
  motorEncoder()
  Motor.Stop("BC","True")
  Motor.MoveSync("BC",40,-40,200,"True")
  Motor.Move("D", 50, 120, "True")
  Motor.ResetCount("BC")
  motorEncoder_Degree = 80
  motorEncoder_Speed = 25
  motorEncoder()
  Motor.Stop("BC","True")
  Program.Delay(80)
  Motor.ResetCount("BC")
  motorEncoder_Degree = 220
  motorEncoder_Speed = -25
  motorEncoder()
  Motor.Stop("BC","True")
  resetKicker()
EndSub

Sub returnRightLeft
  Motor.ResetCount("BC")
  motorEncoder_Degree = 60
  motorEncoder_Speed = 25
  motorEncoder()
  Motor.Stop("BC","True")
  Motor.MoveSync("BC",-40,40,200,"True")
  Motor.Move("D", 50, 120, "True")
  Motor.ResetCount("BC")
  motorEncoder_Degree = 80
  motorEncoder_Speed = 25
  motorEncoder()
  Motor.Stop("BC","True")
  Program.Delay(80)
  Motor.ResetCount("BC")
  motorEncoder_Degree = 220
  motorEncoder_Speed = -25
  motorEncoder()
  Motor.Stop("BC","True")
  resetKicker()
EndSub

Sub motorEncoder
  B_Degree = Motor.GetCount("B") 
  C_Degree = Motor.GetCount("C")
  motorEncoder = (B_Degree - C_Degree)*1
  Motor.MoveSync("BC",motorEncoder_Speed - motorEncoder,motorEncoder_Speed + motorEncoder, motorEncoder_Degree,"True")
EndSub

Sub depositing
  ' TP[0] = 80
  ' counter = 0
  ' While counter < 2
  '   readVal()
  '   PD()
  '   If lightVal[1] <= 120 Then
  '     checkWhite()
  '   EndIf
  ' EndWhile
  ' reset()
  ' Motor.MoveSync("BC",0,40,30"True")
  ' reset()
  ' readVal()
  ' While lightVal[0] >= 592
  '   readVal()
  '   Motor.StartSync("BC",0,40)
  ' EndWhile
  ' reset()
  ' Speaker.Note(100,"C7",40)
  ' TP[0] = 50
  ' TotalRGBGGTH[0] = 592
  ' Motor.ResetCount("BC")
  ' While B_Degree <= 320 
  '   readVal()
  '   PD()
  '   B_Degree = Motor.GetCount("B")
  ' EndWhile
  ' TotalRGBTH[0] = 518
  ' reset()
  ' Speaker.Note(100,"C7",40)
  ' Motor.ResetCount("BC")  
  ' motorEncoder_Degree = 340
  ' motorEncoder_Speed = 25
  ' motorEncoder()
  ' reset()
  ' Motor.MoveSync("BC",25,0,120,"True")
  ' reset()
  ' readVal()
  ' While lightVal[0] >= 120
  '   readVal()
  '   Motor.StartSync("BC",25,0)
  ' EndWhile
  ' reset()
  ' TP[0] = 60
  ' Motor.ResetCount("BC")
  ' readVal()
  ' While B_Degree <= 100
  '   readVal()
  '   PD()
  '   B_Degree = Motor.GetCount("B")
  ' EndWhile
  ' reset()
  ' Motor.MoveSync("BC",0,40,360,"True")
  ' reset()
  ' OpenKicker()
  ' Motor.Start("BC",40)
  ' Program.Delay(200)
  ' Motor.Stop("BC","True")
  ' reset()
  ' readVal()
  ' While lightVal[0] >= 120
  '   readVal()
  '   Motor.StartSync("BC",-25,-25)
  ' EndWhile
  TP[0] = 80
  counter = 0
  While counter < 3
    readVal()
    PD()
    If lightVal[1] <= 120 Then
      checkWhite()
    EndIf
  EndWhile
  reset()
  Program.Delay(200) 'Do not fucking remove
  Motor.ResetCount("BC")  
  motorEncoder_Degree = 70
  motorEncoder_Speed = -25
  motorEncoder()
  reset()
  Motor.MoveSync("BC",20,0,100,"True")
  readVal()
  While lightVal[0] >= 120
    readVal()
    Motor.StartSync("BC",25,0)
  EndWhile
  reset()
  readVal()
  While lightVal[0] <= 120
    readVal()
    Motor.StartSync("BC",0,25)
  EndWhile
  TP[0] = 60 'Do not fucking change the fucking speed genius
  Motor.ResetCount("BC")
  While B_Degree <= 60
    readVal()
    PD()
    B_Degree = Motor.GetCount("B")
  EndWhile
  reset()
  Motor.MoveSync("BC",0,25,380,"True")
  reset()
  OpenKicker()
  Motor.Start("BC",25)
  Program.Delay(400)
  Motor.Stop("BC","True")
  reset()
  readVal()
  While lightVal[0] >= 120
    readVal()
    Motor.StartSync("BC",-25,-25)
  EndWhile
  lineSquare()
EndSub

Sub reset
  Motor.Stop("BC","True")
  Motor.ResetCount("BC")
  Program.Delay(150)
EndSub

Sub lineSquare
  While lightVal[0] >= lineSquare_TH[0] Or lightVal[1] >= lineSquare_TH[1]
      readVal( )
      If lightVal[0] >= lineSquare_TH[0] Then
          Motor.Start("B",20)
      Else    
          Motor.Stop("B","True")
      EndIf
      If lightVal[1] >= lineSquare_TH[1] Then
          Motor.Start("C",20)
      Else    
          Motor.Stop("C","True")
      EndIf
  EndWhile
  Motor.Stop("BC","True")
  readVal()
  While lightVal[0] <= lineSquare_TH[0] Or lightVal[1] <= lineSquare_TH[1]
      readVal( )
      If lightVal[0] <= lineSquare_TH[0] Then
          Motor.Start("B",-20)
      Else    
          Motor.Stop("B","True")
      EndIf
      If lightVal[1] <= lineSquare_TH[1] Then
          Motor.Start("C",-20)
      Else    
          Motor.Stop("C","True")
      EndIf
  EndWhile
EndSub

Sub collectingCarsFirstSet

  Motor.MoveSync("BC",25,0,450,"True")
  reset()

  readVal()
  While lightVal[0] <= 695
    readVal()
    Motor.StartSync("BC",20,-20)
  EndWhile
  reset()

  TP[0] = 40
  TotalRGBTH[0] = 682
  counter = 0
  While counter < 1
    readVal()
    PDtwo()
    If lightVal[1] <= 120 Then
      checkWhite()
    EndIf
  EndWhile
  reset()
  Program.Delay(200)
  TotalRGBTH[0] = 518

  Motor.ResetCount("BC")
  motorEncoder_Degree = 80
  motorEncoder_Speed = 25
  motorEncoder()
  Motor.Stop("BC","True")
  reset()

  TotalRGBTH[0] = 682
  TP[0] = 40
  Motor.ResetCount("BC")
  While B_Degree <= 260
    readVal()
    PDtwo()
    B_Degree = Motor.GetCount("B")
  EndWhile
  reset()
  TotalRGBTH[0] = 518
  Program.Delay(200)

  Motor.MoveSync("BC",25,0,190,"True")
  reset()
  Motor.MoveSync("BC",0,-25,180,"True")
  reset()
  fullOpen()
  Motor.MoveSync("BC",0,25,100,"True")
  reset()
  Motor.MoveSync("BC",25,0,100,"True")

  Motor.ResetCount("BC")
  motorEncoder_Degree = 40
  motorEncoder_Speed = 25
  motorEncoder()
  Motor.Stop("BC","True")
  reset()

  Motor.Start("D",-100)
  Program.Delay(400)
  Motor.Stop("D","True")
  reset()

  Motor.MoveSync("BC",0,25,60,"True")
  Motor.Start("A",-100)
  Program.Delay(400)
  Motor.Stop("A","True")
  reset()
EndSub

Sub depositingCarsFirstSet
  Motor.ResetCount("BC")
  motorEncoder_Degree = 100
  motorEncoder_Speed = 25
  motorEncoder()
  Motor.Stop("BC","True")

  Motor.MoveSync("BC",25,0,180,"True")
  reset()

  readVal()
  While lightVal[0] >= 120
    readVal()
    Motor.StartSync("BC",25,25)
  EndWhile

  counter = 0
  TP[0] = 40
  readVal()
  While counter < 1
    readVal()
    PD()
    If lightVal[1] <= 120 Then
      checkWhite()
    EndIf
  EndWhile

  counter = 0
  TP[0] = 80
  readVal()
  While counter < 2
    readVal()
    PD()
    If lightVal[1] <= 120 Then
      checkWhite()
    EndIf
  EndWhile

  returnRight()

  Motor.Stop("BC","True")
  resetKicker()
  Motor.MoveSync("BC",0,40,180,"True")
  Motor.Stop("BC","True")
  readVal()
  While lightVal[0] >= 120
    readVal()
    Motor.StartSync("BC",0,40)
  EndWhile
  reset()
  readVal()
  While lightVal[0] <= 120
    readVal()
    Motor.StartSync("BC",0,40)
  EndWhile
  reset()

  counter = 0

  TP[0] = 60
  readVal()
  While counter < 1
    readVal()
    PD()
    If lightVal[1] <= 120 Then
      checkWhite()
    EndIf
  EndWhile

  returnLeft()
  reset()
EndSub

Sub collectingSecondSet
  Motor.MoveSync("BC",40,0,270,"True")

  While lightVal[1] >= 120
    readVal()
    Motor.StartSync("BC",40,0)
  EndWhile
  reset()

  Motor.MoveSync("BC",40,0,80,"True")
  reset()

  TP[0] = 60
  counter = 0
  readVal()
  While counter < 1
    readVal()
    PDright()
    If lightVal[0] <= 120 Then
      checkWhite()
    EndIf
  EndWhile
  reset()

  TP[0] = 80
  counter = 0
  readVal()
  While counter < 3
    readVal()
    PDright()
    If lightVal[0] <= 120 Then
      checkWhite()
    EndIf
  EndWhile
  reset()



  Motor.MoveSync("BC",25,0,160,"True")
  reset()
  Motor.MoveSync("BC",0,25,160,"True")

  OpenKicker()

  Motor.ResetCount("BC")
  motorEncoder_Degree = 300
  motorEncoder_Speed = 25
  motorEncoder()
  Motor.Stop("BC","True")
  reset()

  slowClosure()
EndSub

Sub depositingCarsSecondset
  Motor.MoveSync("BC",25,-25,390,"True")
  readVal()
  While lightVal[1] <= 120
    readVal()
    Motor.StartSync("BC",40,40)
  EndWhile

  Motor.MoveSync("BC",0,25,120,"True")
  reset()

  Motor.MoveSync("BC",25,0,120,"True")
  reset()

  Motor.MoveSync("BC",0,25,80,"True")
  reset()


  TP[0] = 60
  counter = 0
  readVal()
  While counter < 1
    readVal()
    PDright()
    If lightVal[0] <= 120 Then
      checkWhite()
    EndIf
  EndWhile
  reset()

  TP[0] = 80
  counter = 0
  readVal()
  While counter < 1
    readVal()
    PDright()
    If lightVal[0] <= 120 Then
      checkWhite()
    EndIf
  EndWhile
  reset()

  returnRightLeft()
  reset()

  Motor.Stop("BC","True")
  resetKicker()
  Motor.MoveSync("BC",40,0,180,"True")
  Motor.Stop("BC","True")
  readVal()
  While lightVal[1] >= 120
    readVal()
    Motor.StartSync("BC",40,0)
  EndWhile
  reset()
  readVal()
  While lightVal[1] <= 120
    readVal()
    Motor.StartSync("BC",40,0)
  EndWhile
  reset()

  TP[0] = 60
  counter = 0
  readVal()
  While counter < 2
    readVal()
    PDright()
    If lightVal[0] <= 120 Then
      checkWhite()
    EndIf
  EndWhile
  reset()

  returnLeftLeft()
  reset()
EndSub

Sub collectRedCar
  counter = 0 
  While counter < 5
    readVal()
    PD()
    If lightVal[1] <= 120 Then
      checkWhite()
    EndIf
  EndWhile
  reset()
  resetKicker()
  Motor.Stop("BC","True") 'Do not fucking remove
  collectionLeft()
  Motor.Stop("BC","True")
  OpenKicker()
  Motor.Stop("BC","True")
  Motor.ResetCount("BC")  
  motorEncoder_Degree = 20
  motorEncoder_Speed = 40
  motorEncoder()
  Motor.Stop("BC","True")
  resetKicker()
  Motor.Stop("BC","True")
  Motor.MoveSync("BC",-25,25,280,"True")
  Motor.Stop("BC","True")
  readVal()
  While lightVal[0] >= 120
    readVal()
    Motor.StartSync("BC",0,25)
  EndWhile
  reset()
  readVal()
  While lightVal[0] <= 120
    readVal()
    Motor.StartSync("BC",0,25)
  EndWhile
  reset()
EndSub
'6/9/2021